import{_ as s,c as a,o as l,a as n}from"./app.ff7114bc.js";const f=JSON.parse('{"title":"01-17","description":"","frontmatter":{"isTimeLine":false,"title":"01-17","date":"2021-01-17T00:00:00.000Z","tags":["备战春秋","复习自查"]},"headers":[{"level":2,"title":"模拟实现","slug":"模拟实现","link":"#模拟实现","children":[]},{"level":2,"title":"理论","slug":"理论","link":"#理论","children":[]},{"level":2,"title":"场景","slug":"场景","link":"#场景","children":[]},{"level":2,"title":"朋友们的回答","slug":"朋友们的回答","link":"#朋友们的回答","children":[]}],"relativePath":"pages/offer/review/01-17.md","lastUpdated":1678347021000}'),e={name:"pages/offer/review/01-17.md"},t=n(`<h1 id="_01-17" tabindex="-1">01-17 <a class="header-anchor" href="#_01-17" aria-hidden="true">#</a></h1><h2 id="模拟实现" tabindex="-1">模拟实现 <a class="header-anchor" href="#模拟实现" aria-hidden="true">#</a></h2><ol><li>实现一个instanceof函数</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">instanceof</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">b</span><span style="color:#89DDFF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>实现一个节流函数 throttle</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">throttle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">delay</span><span style="color:#89DDFF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>实现一个防抖函数 debounce</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">debounce</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">delay</span><span style="color:#89DDFF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="理论" tabindex="-1">理论 <a class="header-anchor" href="#理论" aria-hidden="true">#</a></h2><ol><li>js的异步机制是怎样的</li><li>简述一下event loop</li><li>什么是提升，有什么作用</li><li>什么是暂时性死区</li><li>在声明前使用let/const声明的变量会出现什么问题</li><li>判断一个对象是数组的方法有哪些</li></ol><h2 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-hidden="true">#</a></h2><ol><li>数字格式化</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 输入为数字，输出为字符串</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用“,”分割整数部分，小数保留两位</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">* </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">param</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#89DDFF;font-style:italic;">{</span><span style="color:#FFCB6B;font-style:italic;">number</span><span style="color:#89DDFF;font-style:italic;">}</span><span style="color:#676E95;font-style:italic;"> </span><span style="color:#A6ACCD;font-style:italic;">num</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">transfer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...code</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#82AAFF;">transfer</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1234567890.23</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &quot;1,234,567,890.23&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="朋友们的回答" tabindex="-1">朋友们的回答 <a class="header-anchor" href="#朋友们的回答" aria-hidden="true">#</a></h2><ul><li><a href="https://www.cnblogs.com/dark-duck/p/14289579.html" target="_blank" rel="noreferrer">tdk</a></li><li><a href="https://juejin.cn/post/6918694221184499719" target="_blank" rel="noreferrer">tl</a></li></ul>`,15),o=[t];function p(i,c,r,y,d,h){return l(),a("div",null,o)}const F=s(e,[["render",p]]);export{f as __pageData,F as default};
