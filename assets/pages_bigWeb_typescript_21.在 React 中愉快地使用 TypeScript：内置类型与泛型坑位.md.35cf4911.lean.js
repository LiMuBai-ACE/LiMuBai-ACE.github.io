import{_ as s,c as n,o as a,a as l}from"./app.ad5e6bd3.js";const i=JSON.parse('{"title":"21.在 React 中愉快地使用 TypeScript：内置类型与泛型坑位","description":"","frontmatter":{"isTimeLine":true,"title":"21.在 React 中愉快地使用 TypeScript：内置类型与泛型坑位","date":"2020-4-14","tags":["大前端","typescript"],"categories":["大前端"]},"headers":[{"level":2,"title":"项目初始化","slug":"项目初始化","link":"#项目初始化","children":[]},{"level":2,"title":"项目配置","slug":"项目配置","link":"#项目配置","children":[]},{"level":2,"title":"组件声明","slug":"组件声明","link":"#组件声明","children":[{"level":3,"title":"组件泛型","slug":"组件泛型","link":"#组件泛型","children":[]}]},{"level":2,"title":"泛型坑位","slug":"泛型坑位","link":"#泛型坑位","children":[{"level":3,"title":"useState","slug":"usestate","link":"#usestate","children":[]},{"level":3,"title":"useCallback 与 useMemo","slug":"usecallback-与-usememo","link":"#usecallback-与-usememo","children":[]},{"level":3,"title":"useReducer","slug":"usereducer","link":"#usereducer","children":[]},{"level":3,"title":"useRef 与 useImperativeHandle","slug":"useref-与-useimperativehandle","link":"#useref-与-useimperativehandle","children":[]}]},{"level":2,"title":"内置类型定义","slug":"内置类型定义","link":"#内置类型定义","children":[{"level":3,"title":"其他内置类型","slug":"其他内置类型","link":"#其他内置类型","children":[]}]},{"level":2,"title":"其他工程实践","slug":"其他工程实践","link":"#其他工程实践","children":[{"level":3,"title":"项目中的类型声明文件","slug":"项目中的类型声明文件","link":"#项目中的类型声明文件","children":[]},{"level":3,"title":"组件与组件类型","slug":"组件与组件类型","link":"#组件与组件类型","children":[]}]},{"level":2,"title":"总结与预告","slug":"总结与预告","link":"#总结与预告","children":[]},{"level":2,"title":"扩展阅读","slug":"扩展阅读","link":"#扩展阅读","children":[{"level":3,"title":"FC 并不是完美的","slug":"fc-并不是完美的","link":"#fc-并不是完美的","children":[]}]}],"relativePath":"pages/bigWeb/typescript/21.在 React 中愉快地使用 TypeScript：内置类型与泛型坑位.md","lastUpdated":1679313190000}'),p={name:"pages/bigWeb/typescript/21.在 React 中愉快地使用 TypeScript：内置类型与泛型坑位.md"},o=l("",153),e=[o];function t(c,r,y,F,D,C){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
