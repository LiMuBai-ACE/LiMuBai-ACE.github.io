import{_ as s,c as a,o as e,a as n}from"./app.ad5e6bd3.js";const u=JSON.parse('{"title":"12-25","description":"","frontmatter":{"isTimeLine":false,"title":"12-25","date":"2020-12-25T00:00:00.000Z","tags":["备战春秋","复习自查"]},"headers":[{"level":2,"title":"计算机网路","slug":"计算机网路","link":"#计算机网路","children":[]},{"level":2,"title":"设计模式","slug":"设计模式","link":"#设计模式","children":[]},{"level":2,"title":"浏览器","slug":"浏览器","link":"#浏览器","children":[]},{"level":2,"title":"CSS","slug":"css","link":"#css","children":[]},{"level":2,"title":"朋友们的回答","slug":"朋友们的回答","link":"#朋友们的回答","children":[]}],"relativePath":"pages/offer/review/12-25.md","lastUpdated":1679313190000}'),l={name:"pages/offer/review/12-25.md"},t=n(`<h1 id="_12-25" tabindex="-1">12-25 <a class="header-anchor" href="#_12-25" aria-hidden="true">#</a></h1><h2 id="计算机网路" tabindex="-1">计算机网路 <a class="header-anchor" href="#计算机网路" aria-hidden="true">#</a></h2><ol><li>TCP与UDP的区别</li></ol><h2 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-hidden="true">#</a></h2><ol><li>用Class与Function的方式分别实现一个单例模式的案例</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Person</span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Person</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Person</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> Person</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span></code></pre></div><h2 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-hidden="true">#</a></h2><ol><li>什么是回流与重绘？</li><li>浏览器中存储数据的方案有哪几种</li></ol><h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-hidden="true">#</a></h2><p>实现一个雪花飘落的动画？</p><p>tips:</p><ul><li>这里的雪花就画个圆就行了，或者找个雪花图片</li><li>飘落，就是摇摇晃晃的 从上向下掉（简单表示一下就行了）</li></ul><h2 id="朋友们的回答" tabindex="-1">朋友们的回答 <a class="header-anchor" href="#朋友们的回答" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6910894799268610062/" target="_blank" rel="noreferrer">tdk</a></li><li><a href="https://www.cnblogs.com/banshanliang/p/14196922.html" target="_blank" rel="noreferrer">fyx</a></li><li><a href="https://juejin.cn/post/6910513920763494407" target="_blank" rel="noreferrer">tl</a></li><li><a href="https://www.cnblogs.com/banshanliang/p/14196922.html" target="_blank" rel="noreferrer">fyx</a></li></ul>`,14),r=[t];function o(i,p,c,h,d,_){return e(),a("div",null,r)}const A=s(l,[["render",o]]);export{u as __pageData,A as default};
