import{_ as s,c as l,o as a,a as n}from"./app.471d11cf.js";const d=JSON.parse('{"title":"字节跳动-商业变现-广告","description":"","frontmatter":{"isTimeLine":true,"title":"字节跳动-商业变现-广告","date":"2020-10-23T00:00:00.000Z","tags":["备战春秋","2020秋招"],"categories":["备战春秋"]},"headers":[{"level":2,"title":"一面","slug":"一面","link":"#一面","children":[{"level":3,"title":"代码题","slug":"代码题","link":"#代码题","children":[]},{"level":3,"title":"计网","slug":"计网","link":"#计网","children":[]},{"level":3,"title":"操作系统","slug":"操作系统","link":"#操作系统","children":[]},{"level":3,"title":"浏览器","slug":"浏览器","link":"#浏览器","children":[]},{"level":3,"title":"js/css","slug":"js-css","link":"#js-css","children":[]},{"level":3,"title":"vue","slug":"vue","link":"#vue","children":[]},{"level":3,"title":"其它","slug":"其它","link":"#其它","children":[]}]},{"level":2,"title":"二面","slug":"二面","link":"#二面","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"js/css","slug":"js-css-1","link":"#js-css-1","children":[]},{"level":3,"title":"其它","slug":"其它-1","link":"#其它-1","children":[]}]},{"level":2,"title":"三面","slug":"三面","link":"#三面","children":[{"level":3,"title":"cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"http","slug":"http","link":"#http","children":[]},{"level":3,"title":"文件上传","slug":"文件上传","link":"#文件上传","children":[]},{"level":3,"title":"场景题","slug":"场景题","link":"#场景题","children":[]}]}],"relativePath":"pages/offer/sum-interview/20-autumn/bytedance.md","lastUpdated":1678348653000}'),e={name:"pages/offer/sum-interview/20-autumn/bytedance.md"},o=n(`<h1 id="字节跳动-商业变现-广告" tabindex="-1">字节跳动-商业变现-广告 <a class="header-anchor" href="#字节跳动-商业变现-广告" aria-hidden="true">#</a></h1><h2 id="一面" tabindex="-1">一面 <a class="header-anchor" href="#一面" aria-hidden="true">#</a></h2><h3 id="代码题" tabindex="-1">代码题 <a class="header-anchor" href="#代码题" aria-hidden="true">#</a></h3><ol><li>链表的插入，删除，长度计算</li><li>求解最长公共子串</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> list </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">acccs</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">acaaa</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ac</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ac</span></span>
<span class="line"></span></code></pre></div><ol><li><a href="./../../../coding/js/promiseAll.html">实现一个promise.All</a></li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 要求：必须等全部都resolved或这reject才返回</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 有一个reject就走catch</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 返回数组:（包括每一个resolved/reject的内容）</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">waitAll</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">promises</span><span style="color:#89DDFF;">){</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li><a href="./../../../coding/js/myBind.html">实现bind</a></li><li><a href="./../../../coding/js/deepClone.html">深拷贝的有哪些实现方式,递归实现一个深拷贝</a></li><li>下面代码哪些if是真</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">([])</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">([]</span><span style="color:#89DDFF;">==</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{}==</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><ol start="7"><li><a href="./../../../computerBase/design/single.html">实现一个单例模式</a></li><li><a href="./../../../coding/js/inherit.html">使用ES5实现一个继承</a></li></ol><h3 id="计网" tabindex="-1">计网 <a class="header-anchor" href="#计网" aria-hidden="true">#</a></h3><ol><li>TCP、UDP的区别</li><li>OSI七层模型</li><li>物理层传输的单位是什么</li><li>http1与http2的区别</li><li>https与http的区别</li><li>ajax与http的关系</li><li>在浏览器中输入url发出的请求与ajax的区别</li><li>http包是如何到达服务器的</li><li>TLS工作原理</li><li>客户端如何知道服务端下发的CA证书是没有被劫持篡改过的</li><li>客户端如何验证CA证书是合法的</li><li>我没有去主动安装这些证书，浏览器是怎么验证的</li><li>GET与POST区别</li><li>URL长度限制是多长</li><li>常用请求方法</li><li>GET是否可以在body中放内容</li><li>http请求body是否有大小限制</li><li>什么情况下请求方法是options</li></ol><h3 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-hidden="true">#</a></h3><ol><li>进程与线程的区别</li><li>进程怎么并行</li></ol><h3 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-hidden="true">#</a></h3><ol><li><a href="./../../../bigWeb/browser/cache.html#强缓存">如何设置浏览器缓存</a></li><li><a href="./../../../bigWeb/browser/cache.html#缓存策略">什么是强缓存/协商缓存</a></li><li><a href="./../../../bigWeb/browser/safe.html#xss">XSS是什么？如何预防？</a></li></ol><h3 id="js-css" tabindex="-1">js/css <a class="header-anchor" href="#js-css" aria-hidden="true">#</a></h3><ol><li><a href="./../../../interview/js/primitiveType.html">原始值类型有哪些</a></li><li><a href="./../../../bigWeb/js/p4.html">如何判断变量类型</a></li><li><a href="./../../../interview/js/judgeArr.html">如何判断数组</a></li><li><a href="./../../../interview/js/nullobj.html">null是对象吗，为什么</a></li><li><a href="./../../../interview/js/diff-for-in-of.html">forof与forin区别</a></li><li><a href="./../../../interview/js/diff-for-in-of.html">forof 与 forin在遍历顺序上是否有区别</a></li><li><a href="./../../../bigWeb/js/apply.html">call,bind,apply区别</a></li><li><a href="./../../../bigWeb/css/pseudo-class.html">伪类</a>与<a href="./../../../bigWeb/css/pseudo-element.html">伪元素</a>的区别，举例用过的伪类与伪元素，以及它们的使用场景</li><li><a href="./../../../bigWeb/css/selectors.html">css选择器</a>用过哪些，都有什么作用</li><li><a href="./../../../bigWeb/js/getElement.html">如何获取一个dom对象，这几种方式哪个效率最高，为什么</a></li><li>什么是事件委托？优点是什么？</li><li>如何获取指定dom的指定属性</li><li>如何获取指定dom的指定样式</li><li>如何获取指定dom的生效样式</li><li>简述一下CSS盒模型，可以手动去改变吗</li></ol><h3 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-hidden="true">#</a></h3><ol><li>slot的常见用法有哪些</li><li>什么是slot，他有什么作用</li><li>为什么会有slot这个玩意儿</li></ol><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-hidden="true">#</a></h3><ol><li>TS将属相分为哪两大类</li><li>你认为TS有什么优点</li><li>如何在项目中引入TS，成本大吗</li><li>js项目迁移TS成本大吗</li></ol><h2 id="二面" tabindex="-1">二面 <a class="header-anchor" href="#二面" aria-hidden="true">#</a></h2><h3 id="代码" tabindex="-1">代码 <a class="header-anchor" href="#代码" aria-hidden="true">#</a></h3><ol><li>实现一个深拷贝考虑对象原有的特性</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> old </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">p1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">p2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">p3</span><span style="color:#89DDFF;">:{</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deepclone</span><span style="color:#89DDFF;">(){}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deepclone</span><span style="color:#A6ACCD;">(old)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 这里原有的特性指拷贝出来的b</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 他的p1,p2,p3.p指向的是同一个对象</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 即效果</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">p1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(b</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">p2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age) </span><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>代码阅读</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">a</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(c</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b) </span><span style="color:#676E95;font-style:italic;">// ?</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>代码阅读</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">j</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">j</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">},</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">        </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 输出结果是多少？为什么</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// var 变为 let 结果又是多少？为什么</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>实现一个onclik事件,每点击一次造成一次内存泄露</li></ol><h3 id="js-css-1" tabindex="-1">js/css <a class="header-anchor" href="#js-css-1" aria-hidden="true">#</a></h3><ol><li>什么是闭包？它的使用场景有哪些？举个例子（代码）</li><li>内存泄漏指什么?为什么会出现？举个内存泄漏的例子（代码）</li><li>js的垃圾回收机制是什么？如何工作的</li><li>node中的js与浏览器中的js区别</li><li>用node.js写服务端与用js写web 你觉得有哪些差异</li><li>什么是媒体查询？使用场景</li><li>混合开发APP与H5样式层面遇到过哪些差异之处说说看</li></ol><h3 id="其它-1" tabindex="-1">其它 <a class="header-anchor" href="#其它-1" aria-hidden="true">#</a></h3><ol><li>webpack的loader与plugin的区别是什么？为什么会有plugin，只用loader不行吗</li><li>根据自己的理解，描述一下webpack是什么，（向一个不知道什么是webpack的人陈述）</li></ol><h2 id="三面" tabindex="-1">三面 <a class="header-anchor" href="#三面" aria-hidden="true">#</a></h2><h3 id="cookie" tabindex="-1">cookie <a class="header-anchor" href="#cookie" aria-hidden="true">#</a></h3><p>背景：<a href="http://xn--a-xh0bz68qo5a.com/index.html%E4%B8%8B%EF%BC%8C%E5%8A%A0%E8%BD%BD%E4%BA%86%E4%B8%80%E4%B8%AAb.com/js/demo.js%E8%84%9A%E6%9C%AC" target="_blank" rel="noreferrer">页面在a.com/index.html下，加载了一个b.com/js/demo.js脚本</a></p><ol><li>获取脚本的请求会附带a.com下的cookie吗</li><li>这个脚本如果执行document.cookie获取到的cookie是哪个域名下</li><li>如果在脚本中向b.com发送ajax请求会携带a.com下的cookie吗，为什么</li><li>将a.com下的cookie发送到b.com下有哪些方案</li><li>如何防止外部脚本嵌入</li><li>如果需要在页面中嵌入外部的脚本，如何防止其获取到cookie</li><li>说一下samesite属性的作用，他有哪些值</li><li>HttpOnly的作用</li><li>让跨域请求携带当前域下的cookie有哪几种方式</li><li>解决跨域的手段有哪些</li><li>说一下jsonp的原理，如何配置</li><li>CROS如何配置，客户端还是服务端做配置</li></ol><h3 id="http" tabindex="-1">http <a class="header-anchor" href="#http" aria-hidden="true">#</a></h3><ol><li>http1与http2的区别</li><li>http2有哪些新特性</li><li>多路复用如何工作的</li><li>知道帧id吗？他有什么作用</li><li>如果一个请求服务器要处理很久才能响应，有哪些办法在服务端处理完后,客户端能第一时间接收到</li><li>知道pwa吗</li><li>请求超时时间可以设置为24h吗</li></ol><h3 id="文件上传" tabindex="-1">文件上传 <a class="header-anchor" href="#文件上传" aria-hidden="true">#</a></h3><ol><li>如何实现分片上传</li><li>如何实现断点续传</li><li>如何计算文件的md5（md5的算法）</li><li>服务端如何处理上传完的分片</li></ol><h3 id="场景题" tabindex="-1">场景题 <a class="header-anchor" href="#场景题" aria-hidden="true">#</a></h3><p>实现：一个select下拉框选择不同的选项，在其下方展示不同的内容(单个组件，组件嵌套组件等)</p><ol><li>可能有很多选项，每个选项对应的渲染内容又不一致</li><li>选项与展示内容的关联关系，很可能发生变动，如何避免硬编码</li></ol>`,46),p=[o];function t(i,c,r,y,D,F){return a(),l("div",null,p)}const C=s(e,[["render",t]]);export{d as __pageData,C as default};
