import{_ as s,c as a,o as n,a as l}from"./app.ad5e6bd3.js";const C=JSON.parse(`{"title":"为什么'\\\\x1B'.length===1？\\\\x与\\\\u知识延伸","description":"","frontmatter":{"title":"为什么'\\\\x1B'.length===1？\\\\x与\\\\u知识延伸","date":"2021-10-04T00:00:00.000Z","tags":["技术笔记","技术教程"],"categories":["技术笔记"]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"原因","slug":"原因","link":"#原因","children":[]},{"level":2,"title":"\\\\x","slug":"x","link":"#x","children":[]},{"level":2,"title":"\\\\u","slug":"u","link":"#u","children":[]},{"level":2,"title":"常规字符与Unicode\\b字符互转","slug":"常规字符与unicode字符互转","link":"#常规字符与unicode字符互转","children":[{"level":3,"title":"str2Unicode","slug":"str2unicode","link":"#str2unicode","children":[]},{"level":3,"title":"unicode2Str","slug":"unicode2str","link":"#unicode2str","children":[]}]},{"level":2,"title":"还原chalk处理后的字符串","slug":"还原chalk处理后的字符串","link":"#还原chalk处理后的字符串","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"pages/technology/learn/ux.md","lastUpdated":1679313190000}`),o={name:"pages/technology/learn/ux.md"},p=l(`<h1 id="为什么-x1b-length-1-x与-u知识延伸" tabindex="-1">为什么&#39;\\x1B&#39;.length === 1？\\x与\\u知识延伸 <a class="header-anchor" href="#为什么-x1b-length-1-x与-u知识延伸" aria-hidden="true">#</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-hidden="true">#</a></h2><p>先讲一下背景，再说原因</p><p>大多数库都会在日志中使用<code>chalk</code>库为console的内容进行上色</p><p>被<code>chalk</code>处理后，其原本的内容会被‘\\x1B...’所包裹</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">blue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">([chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">blue</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://img.cdn.sugarat.top/mdImg/MTYzMzE1NzQ3MjA5OQ==633157472099" alt="图片"></p><p>在开发<a href="https://github.com/ATQQ/vite-plugin-monitor" target="_blank" rel="noreferrer">vite-plugin-monitor</a>时，为了获取原始的日志内容（上色之前），需要将上色后的字符串还原</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">\\x1B</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">34mgreen\\x1B</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">39m </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> green</span></span>
<span class="line"></span></code></pre></div><p>在使用正则处理内容的时候发现了一个问题</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x1B</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">x</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 结果？？</span></span>
<span class="line"></span></code></pre></div><p>通过<code>.length</code>查看其长度，结果就如标题所示</p><p><img src="https://img.cdn.sugarat.top/mdImg/MTYzMzE1ODMwMzk5Ng==633158303996" alt="图片"></p><h2 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-hidden="true">#</a></h2><p>反斜杠<code>&quot;\\&quot;</code>通常标识转义字符，如<code>\\n(换行符)</code>,<code>\\t(制表符)</code></p><p>而<code>\\x</code>就标识16进制，后面跟上两位16进制数</p><p>与此同时还有<code>\\u</code>也是标识16进制，但其后面需跟上4位16进制数</p><p>因此这里的<code>\\x1B</code>实际上就是一个字符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x41</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\u0041</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="x" tabindex="-1">\\x <a class="header-anchor" href="#x" aria-hidden="true">#</a></h2><p><code>\\xhh</code>匹配一个以两位十六进制数（<code>\\x00</code>-<code>\\xFF</code>）表示的字符</p><p>主要用于<a href="https://tool.oschina.net/commons?type=4" target="_blank" rel="noreferrer">ASCII码</a>的表示</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x41</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> ‘A’</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">A</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCharCode</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">65</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x61</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> ‘a’</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCharCode</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">97</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p><code>\\x</code>后必须跟着两位16进制的字符，否则会报错，其中 <code>A</code>-<code>F</code> 不区分大小写</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Uncaught SyntaxError: Invalid hexadecimal escape sequence</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\x</span><span style="color:#C3E88D;">fg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Uncaught SyntaxError: Invalid hexadecimal escape sequence</span></span>
<span class="line"></span></code></pre></div><h2 id="u" tabindex="-1">\\u <a class="header-anchor" href="#u" aria-hidden="true">#</a></h2><p><code>\\uhhhh</code>匹配一个以四位十六进制数（<code>\\u0000</code>-<code>\\uFFFF</code>）表示的 Unicode 字符。</p><p>在正则表达式中常见于匹配中文字符</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">\\u4e00-\\u9fa5</span><span style="color:#89DDFF;">]/</span></span>
<span class="line"><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">中文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">r</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">English</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span></code></pre></div><h2 id="常规字符与unicode字符互转" tabindex="-1">常规字符与Unicode\b字符互转 <a class="header-anchor" href="#常规字符与unicode字符互转" aria-hidden="true">#</a></h2><h3 id="str2unicode" tabindex="-1">str2Unicode <a class="header-anchor" href="#str2unicode" aria-hidden="true">#</a></h3><ol><li>使用<code>String.prototype.charCodeAt</code>获取指定位置的 Unicode 码点（十进制表示）</li><li>使用<code>String.prototype.toString</code>将其转为十六进制字符,转为16进制字符不会自动补0</li><li>通过<code>String.prototype.padStart</code>进行补<code>0</code></li></ol><p>编写的通用处理方法如下</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">str2Unicode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">c</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">of</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">s</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">u</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">charCodeAt</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">padStart</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}\`</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">str2Unicode</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1a中文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// &#39;\\\\u0031\\\\u0061\\\\u4e2d\\\\u6587&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="unicode2str" tabindex="-1">unicode2Str <a class="header-anchor" href="#unicode2str" aria-hidden="true">#</a></h3><ol><li>通过正则<code>/\\\\u[\\da-f]{4}/g</code>匹配出所有的unicode字符</li><li>使用<code>Number</code>将<code>0x\${matchStr}</code>转换为10进制数</li><li>使用<code>String.fromCodePoint</code>将unicode码点转为字符</li><li>\b\b使用<code>String.prototype.replace</code>进行逐字符的转换</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">unicode2Str</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unicodeList</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">u</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">\\da-f</span><span style="color:#89DDFF;">]{4}/</span><span style="color:#F78C6C;">g</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">unicodeList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">pre</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">u</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pre</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fromCodePoint</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">Number</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">0x</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)))</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">unicode2Str</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">u0061</span><span style="color:#A6ACCD;">\\\\</span><span style="color:#C3E88D;">u4e2d文</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// 1a中文</span></span>
<span class="line"></span></code></pre></div><h2 id="还原chalk处理后的字符串" tabindex="-1">还原chalk处理后的字符串 <a class="header-anchor" href="#还原chalk处理后的字符串" aria-hidden="true">#</a></h2><p>自己从0-1写一个正则难免会有许多边界情况考虑不周全，于是在chalk的README中找到了<a href="https://github.com/chalk/ansi-regex" target="_blank" rel="noreferrer">chalk/ansi-regex</a>这个库</p><p>可以将色值相关的 <code>ANSI转义码</code> 匹配出来</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> ansiRegex </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ansi-regex</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\u001B</span><span style="color:#C3E88D;">[4mcake</span><span style="color:#A6ACCD;">\\u001B</span><span style="color:#C3E88D;">[0m</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">ansiRegex</span><span style="color:#A6ACCD;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//=&gt; [&#39;\\u001B[4m&#39;, &#39;\\u001B[0m&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\u001B</span><span style="color:#C3E88D;">[4mcake</span><span style="color:#A6ACCD;">\\u001B</span><span style="color:#C3E88D;">[0m</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">match</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">ansiRegex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">onlyFirst</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//=&gt; [&#39;\\u001B[4m&#39;]</span></span>
<span class="line"></span></code></pre></div><p>编写一下处理方法</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">resetChalkStr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">str</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">ansiRegex</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>测试</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">green</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">greenBright</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">greenBright</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">([chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">green</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">greenBright</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">greenBright</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">resetChalkStr</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`\${</span><span style="color:#A6ACCD;">chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">green</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">green</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">chalk</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">greenBright</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">greenBright</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><img src="https://img.cdn.sugarat.top/mdImg/MTYzMzMzMzExNzEzOA==633333117138" alt="图片"></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><p>重拾了一下<code>\\x</code>与<code>\\u</code>相关的内容，突然额外想到一个点，使用\\u去做字符串的加解密(下来再捋一捋)</p><p>解决了一个<code>chalk</code>相关的问题“还原终端中的彩色内容”</p>`,49),e=[p];function t(c,r,y,D,F,i){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{C as __pageData,d as default};
