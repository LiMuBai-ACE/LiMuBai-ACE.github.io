import{_ as a,c as s,o as e,a as l}from"./app.ff7114bc.js";const _=JSON.parse('{"title":"12-27","description":"","frontmatter":{"isTimeLine":false,"title":"12-27","date":"2020-12-27T00:00:00.000Z","tags":["备战春秋","复习自查"]},"headers":[{"level":2,"title":"JS","slug":"js","link":"#js","children":[]},{"level":2,"title":"CSS","slug":"css","link":"#css","children":[]},{"level":2,"title":"浏览器","slug":"浏览器","link":"#浏览器","children":[]},{"level":2,"title":"朋友们的回答","slug":"朋友们的回答","link":"#朋友们的回答","children":[]}],"relativePath":"pages/offer/review/12-27.md","lastUpdated":1678347021000}'),n={name:"pages/offer/review/12-27.md"},t=l(`<h1 id="_12-27" tabindex="-1">12-27 <a class="header-anchor" href="#_12-27" aria-hidden="true">#</a></h1><h2 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-hidden="true">#</a></h2><ol><li>数组去重（不限于一种方案）</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. {}与{},{a:1}与{a:1},[]与[]算一样的</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// [1,2,&#39;1&#39;,&#39;2&#39;,1,null,null,undefined,undefined,{},{},[],[],[1],[1],[&#39;1&#39;],[&#39;1&#39;],NaN.NaN,true,true]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">duplicate</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">arr</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...code</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-hidden="true">#</a></h2><ol><li>响应式布局是如何实现的？</li><li>如果期望以下的<code>div</code>，该如何书写样式 <ul><li>在视口宽度 &lt;=750px展示为长宽都为200px的红色方块</li><li>在视口宽度 &gt;750px且 &lt;=1400px 时展示为 长宽400px的蓝色方块</li><li>在视口宽度 &gt;1400px 是展示为 长宽 600px 的黑色方块</li></ul></li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">container</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="浏览器" tabindex="-1">浏览器 <a class="header-anchor" href="#浏览器" aria-hidden="true">#</a></h2><ol><li>requestIdleCallback 与 requestAnimationFrame 的作用分别是什么？有何异同？</li></ol><h2 id="朋友们的回答" tabindex="-1">朋友们的回答 <a class="header-anchor" href="#朋友们的回答" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/6910921137052467208/" target="_blank" rel="noreferrer">tdk</a></li><li><a href="https://www.cnblogs.com/banshanliang/p/14198055.html" target="_blank" rel="noreferrer">fyx</a></li><li><a href="https://juejin.cn/post/6912726919087980552" target="_blank" rel="noreferrer">tl</a></li><li><a href="https://www.cnblogs.com/banshanliang/p/14198055.html" target="_blank" rel="noreferrer">fyx</a></li></ul>`,11),i=[t];function r(o,p,c,d,h,u){return e(),s("div",null,i)}const y=a(n,[["render",r]]);export{_ as __pageData,y as default};
