import{_ as s,c as a,o as l,a as n}from"./app.ad5e6bd3.js";const A=JSON.parse('{"title":"浮点数","description":"","frontmatter":{"sidebar":{"title":"浮点数","step":24},"isTimeLine":true,"title":"浮点数","date":"2020-04-14T00:00:00.000Z","tags":["大前端","javascript"],"categories":["大前端"]},"headers":[{"level":2,"title":"为什么 0.1 + 0.2 != 0.3","slug":"为什么-0-1-0-2-0-3","link":"#为什么-0-1-0-2-0-3","children":[]},{"level":2,"title":"如何正确判断","slug":"如何正确判断","link":"#如何正确判断","children":[]}],"relativePath":"pages/bigWeb/js/float.md","lastUpdated":1679313190000}'),o={name:"pages/bigWeb/js/float.md"},p=n(`<h1 id="浮点数" tabindex="-1">浮点数 <a class="header-anchor" href="#浮点数" aria-hidden="true">#</a></h1><ul><li>ECMAScript 中的 Number 类型使用 IEEE754 标准来表示整数和浮点数值。 <ul><li>IEEE754 标准，全称 IEEE 二进制浮点数算术标准，定义了表示浮点数的格式等内容。</li><li>在 IEEE754 中，规定了四种表示浮点数值的方式：单精确度（32位）、双精确度（64位）、延伸单精确度、与延伸双精确度。</li></ul></li><li>ECMAScript 采用的双精确度:即用 64 位字节来储存一个浮点数。 <ul><li>第一位用来表示符号</li><li>接下去的 11 位用来表示指数</li><li>剩下的52位,表示有效位</li></ul></li></ul><h2 id="为什么-0-1-0-2-0-3" tabindex="-1">为什么 0.1 + 0.2 != 0.3 <a class="header-anchor" href="#为什么-0-1-0-2-0-3" aria-hidden="true">#</a></h2><ul><li>JS采用IEEE 754双精度版本,计算机采用二进制存储数据</li><li><code>0.1</code> 在计算机中表示是无限循环</li><li>JS会裁剪掉数字的一部分导致精度丢失</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 0011无限循环</span></span>
<span class="line"><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.00011</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0011</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">^-</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1.1</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0011</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 因此</span></span>
<span class="line"><span style="color:#F78C6C;">0.100000000000000002</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#F78C6C;">0.200000000000000002</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#F78C6C;">0.1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.300000000000000004</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F78C6C;">0.3</span></span>
<span class="line"></span></code></pre></div><h2 id="如何正确判断" tabindex="-1">如何正确判断 <a class="header-anchor" href="#如何正确判断" aria-hidden="true">#</a></h2><ol><li>Number.EPSILON的精度是2^-52，所以只要丢失精度小于Number.EPSILON基本可以确认相等。</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">compareNum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num2</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">num2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">EPSILON</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">compareNum</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>使用toFixed 比较指定的精确位数</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">compareNum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">num2</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">num1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">num2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toFixed</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">compareNum</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0.1</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">0.2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0.3</span><span style="color:#A6ACCD;">)) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">参考</p><p><a href="https://github.com/mqyqingfeng/Blog/issues/155" target="_blank" rel="noreferrer">JavaScript 深入之浮点数精度</a></p></div>`,11),e=[p];function t(c,r,i,y,C,F){return l(),a("div",null,e)}const d=s(o,[["render",t]]);export{A as __pageData,d as default};
