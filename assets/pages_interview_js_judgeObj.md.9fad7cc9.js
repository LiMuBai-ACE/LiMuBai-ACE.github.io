import{_ as s,c as a,o as n,a as e}from"./app.fb687074.js";const C=JSON.parse('{"title":"如何判断变量类型是对象","description":"","frontmatter":{"isTimeLine":true,"title":"如何判断变量类型是对象","date":"2020-09-11T00:00:00.000Z","tags":["面试","javascript"],"categories":["面试"]},"headers":[{"level":2,"title":"1. instanceof","slug":"_1-instanceof","link":"#_1-instanceof","children":[]},{"level":2,"title":"2. typeof","slug":"_2-typeof","link":"#_2-typeof","children":[]}],"relativePath":"pages/interview/js/judgeObj.md","lastUpdated":1678974252000}'),o={name:"pages/interview/js/judgeObj.md"},l=e(`<h1 id="如何判断变量类型是对象" tabindex="-1">如何判断变量类型是对象 <a class="header-anchor" href="#如何判断变量类型是对象" aria-hidden="true">#</a></h1><blockquote><p>指广义上的对象这里，Array,RegExp,function。。。。等等</p></blockquote><h2 id="_1-instanceof" tabindex="-1">1. instanceof <a class="header-anchor" href="#_1-instanceof" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-typeof" tabindex="-1">2. typeof <a class="header-anchor" href="#_2-typeof" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isObject</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">obj</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">typeof</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">object</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">function</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>其余方案,编写<code>isObject</code>函数稍许麻烦</p><ul><li>constructor</li><li>Object.prototype.toString.call</li></ul>`,8),t=[l];function p(c,r,i,y,F,D){return n(),a("div",null,t)}const A=s(o,[["render",p]]);export{C as __pageData,A as default};
