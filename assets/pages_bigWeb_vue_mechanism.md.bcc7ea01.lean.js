import{_ as d,c as i,b as a,w as t,d as s,e,a as o,r as l,o as r}from"./app.ad5e6bd3.js";const W=JSON.parse('{"title":"运行机制概述","description":"","frontmatter":{"sidebar":{"title":"❤运行机制概述","step":9},"isTimeLine":true,"title":"运行机制概述","date":"2020-04-14T00:00:00.000Z","tags":["大前端","vue"],"categories":["大前端"]},"headers":[{"level":2,"title":"初始化及挂载","slug":"初始化及挂载","link":"#初始化及挂载","children":[]},{"level":2,"title":"编译","slug":"编译","link":"#编译","children":[{"level":3,"title":"parse","slug":"parse","link":"#parse","children":[]},{"level":3,"title":"optimize","slug":"optimize","link":"#optimize","children":[]},{"level":3,"title":"generate","slug":"generate","link":"#generate","children":[]}]},{"level":2,"title":"响应式","slug":"响应式","link":"#响应式","children":[]},{"level":2,"title":"Virtual DOM","slug":"virtual-dom","link":"#virtual-dom","children":[]},{"level":2,"title":"更新视图","slug":"更新视图","link":"#更新视图","children":[]}],"relativePath":"pages/bigWeb/vue/mechanism.md","lastUpdated":1679313190000}'),p={name:"pages/bigWeb/vue/mechanism.md"},h=s("h1",{id:"运行机制概述",tabindex:"-1"},[e("运行机制概述 "),s("a",{class:"header-anchor",href:"#运行机制概述","aria-hidden":"true"},"#")],-1),u=s("p",null,[s("img",{src:"https://img.cdn.sugarat.top/mdImg/MTU4NjgzMzgxNDE1OA==586833814158",alt:"图片"})],-1),_=o("",3),F=s("h3",{id:"parse",tabindex:"-1"},[e("parse "),s("a",{class:"header-anchor",href:"#parse","aria-hidden":"true"},"#")],-1),D=s("code",null,"解析",-1),g=s("h3",{id:"optimize",tabindex:"-1"},[e("optimize "),s("a",{class:"header-anchor",href:"#optimize","aria-hidden":"true"},"#")],-1),y=s("code",null,"update",-1),m=s("code",null,"patch",-1),f=s("code",null,"diff",-1),v=s("code",null,"patch",-1),b=s("h3",{id:"generate",tabindex:"-1"},[e("generate "),s("a",{class:"header-anchor",href:"#generate","aria-hidden":"true"},"#")],-1),V=s("code",null,"AST",-1),x=s("code",null,"render function",-1),T=s("code",null,"parse",-1),C=s("code",null,"optimize",-1),N=s("code",null,"generate",-1),A=s("code",null,"render function",-1),k=o("",16);function S(O,M,z,E,j,B){const c=l("center"),n=l("word");return r(),i("div",null,[h,u,a(c,null,{default:t(()=>[e("全局概览")]),_:1}),_,s("p",null,[e("compile编译分为 "),a(n,{title:"解析"},{default:t(()=>[e("parse")]),_:1}),e(",")]),a(n,{title:"优化"},{default:t(()=>[e("optimize")]),_:1}),e(","),a(n,{title:"生成"},{default:t(()=>[e("generate")]),_:1}),e("三个阶段，最终需要得到 "),a(n,{title:"渲染函数"},{default:t(()=>[e("render function")]),_:1}),F,s("p",null,[e("使用正则表达式等方式"),D,e("Template模板中的指令,class,style等等数据,形成"),a(n,{title:"Abstract Syntax Tree",content:"抽象语法树"},{default:t(()=>[e("AST")]),_:1})]),g,s("p",null,[e("optimize 的主要作用是"),a(n,{content:"这是 Vue 在编译过程中的一处优化"},{default:t(()=>[e("标记 static 静态节点")]),_:1}),e("，当 "),y,e(" 更新界面时，会有一个 "),m,e(" 的过程， "),f,e(" 算法会直接跳过静态节点，从而减少了比较的过程，优化了 "),v,e(" 的性能")]),b,s("p",null,[e("generate 是将 "),V,e(" 转化成 "),x,e(" 字符串的过程，得到结果是 render 的字符串以及 "),a(n,{title:"静态Render",content:"静态 render 其实跟 render 是一样的，都是执行得到 Vnode,只是静态 render，没有绑定动态数据，即说不会变化"},{default:t(()=>[e("staticRenderFns")]),_:1}),e("字符串。")]),s("p",null,[e("在经历过 "),T,e(","),C,e(","),N,e("这三个阶段以后，组件中就会存在渲染 "),a(n,{title:"Virtual DOM",content:"虚拟DOM是JavaScript对象"},{default:t(()=>[e("VNode")]),_:1}),e(" 所需的 "),A,e(" 了")]),k])}const w=d(p,[["render",S]]);export{W as __pageData,w as default};
