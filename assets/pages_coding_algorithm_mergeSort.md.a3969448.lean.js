import{_ as t,c as e,b as s,w as c,d as n,e as l,a as r,r as a,o as y}from"./app.471d11cf.js";const E=JSON.parse('{"title":"归并排序","description":"","frontmatter":{"sidebar":{"title":"排序--归并排序","step":5},"isTimeLine":true,"title":"归并排序","date":"2020-08-02T00:00:00.000Z","tags":["手撕代码","算法与数据结构"],"categories":["手撕代码"]},"headers":[{"level":2,"title":"原理","slug":"原理","link":"#原理","children":[]},{"level":2,"title":"相关属性","slug":"相关属性","link":"#相关属性","children":[]},{"level":2,"title":"递归实现","slug":"递归实现","link":"#递归实现","children":[]},{"level":2,"title":"迭代实现","slug":"迭代实现","link":"#迭代实现","children":[]}],"relativePath":"pages/coding/algorithm/mergeSort.md","lastUpdated":1678348653000}'),F={name:"pages/coding/algorithm/mergeSort.md"},i=n("h1",{id:"归并排序",tabindex:"-1"},[l("归并排序 "),n("a",{class:"header-anchor",href:"#归并排序","aria-hidden":"true"},"#")],-1),D=r("",9);function A(C,f,d,h,g,u){const o=a("company"),p=a("LeetCode");return y(),e("div",null,[i,s(o,{value:"牛客网,几种常见时间复杂度比较低的排序算法之一"}),s(p,{href:"https://leetcode-cn.com/problems/sort-an-array/"},{default:c(()=>[l("912：排序树组")]),_:1}),D])}const _=t(F,[["render",A]]);export{E as __pageData,_ as default};
