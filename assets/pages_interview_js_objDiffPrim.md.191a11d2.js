import{_ as s,c as a,o as e,a as l}from"./app.ad5e6bd3.js";const h=JSON.parse('{"title":"对象类型和原始类型的不同之处","description":"","frontmatter":{"isTimeLine":true,"title":"对象类型和原始类型的不同之处","date":"2020-04-14T00:00:00.000Z","tags":["面试","javascript"],"categories":["面试"]},"headers":[{"level":2,"title":"对象","slug":"对象","link":"#对象","children":[]},{"level":2,"title":"原始值","slug":"原始值","link":"#原始值","children":[]}],"relativePath":"pages/interview/js/objDiffPrim.md","lastUpdated":1679313190000}'),n={name:"pages/interview/js/objDiffPrim.md"},o=l(`<h1 id="对象类型和原始类型的不同之处" tabindex="-1">对象类型和原始类型的不同之处 <a class="header-anchor" href="#对象类型和原始类型的不同之处" aria-hidden="true">#</a></h1><h2 id="对象" tabindex="-1">对象 <a class="header-anchor" href="#对象" aria-hidden="true">#</a></h2><ol><li>对象类型存储的是(地址)指针:声明一个对象会在内存中开辟一块空间存放值</li></ol><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> o1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> o2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> o1</span></span>
<span class="line"><span style="color:#A6ACCD;">o2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(o1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a) </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>变量赋值的时候是赋值的地址:新变量修改会影响原变量</li><li>存在深浅拷贝问题</li></ol><h2 id="原始值" tabindex="-1">原始值 <a class="header-anchor" href="#原始值" aria-hidden="true">#</a></h2><ol><li>赋值的时候拷贝的一个新的值,不会影响原来的</li></ol>`,7),t=[o];function p(r,c,i,d,D,C){return e(),a("div",null,t)}const A=s(n,[["render",p]]);export{h as __pageData,A as default};
